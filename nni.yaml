experimentName: TFT              # An optional name to distinguish the experiments
trialCommand: python main.py      # NOTE: change "python3" to "python" if you are using Windows
trialGpuNumber: 1
trialConcurrency: 2                # Run 2 trials concurrently
maxTrialNumber: 30                  # Generate at most 10 trials
maxExperimentDuration: 100h           # Stop generating trials after 1 hour
useAnnotation: true
tuner:                              # Configure the tuning algorithm
   name: TPE
   classArgs:                       # Algorithm specific arguments
      optimize_mode: minimize
# assessor:
#   #choice: Medianstop, Curvefitting
#   # builtinAssessorName: Curvefitting
#   name: Curvefitting
#   classArgs:
#     # (required)The total number of epoch.
#     #  We need to know the number of epoch to determine which point we need to predict.
#     epoch_num: 10
#     # (optional) In order to save our computing resource, we start to predict when we have more than only after receiving start_step number of reported intermediate results.
#     # The default value of start_step is 6.
#     start_step: 6
#     # (optional) The threshold that we decide to early stop the worse performance curve.
#     # For example: if threshold = 0.95, best performance in the history is 0.9, then we will stop the trial which predict value is lower than 0.95 * 0.9 = 0.855.
#     # The default value of threshold is 0.95.
#     threshold: 0.95
#     # (optional) The gap interval between Assesor judgements.
#     # For example: if gap = 2, start_step = 6, then we will assess the result when we get 6, 8, 10, 12...intermedian result.
#     # The default value of gap is 1.
#     gap: 1
trainingService:                    # Configure the training platform
   platform: local
   useActiveGpu: true
# trial:
#   command: python train.py
#   gpuNum: 1